@import 'material-icons/iconfont/material-icons.css';

/* RESET */
/*
    1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
	box-sizing: border-box;
}

/*
    2. Remove default margin
*/
* {
	margin: 0;
}

/*
Typographic tweaks!
    3. Add accessible line-height
    4. Improve text rendering
*/
body {
	line-height: 1.5;
	-webkit-font-smoothing: antialiased;
}

/*
    5. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
	display: block;
	max-width: 100%;
}

/*
    6. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
	font: inherit;
}

/*
    7. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
	overflow-wrap: break-word;
}

/*
    8. Create a root stacking context
*/
#root,
#__next {
	isolation: isolate;
}

// https://moderncss.dev/modern-css-for-dynamic-component-based-architecture/
a:not([class]) {
	/* Relatively sized thickness and offset */
	text-decoration-thickness: max(0.08em, 1px);
	text-underline-offset: 0.15em;
}


/* ROOT */
:root {
	--gray-100: hwb(210 97% 1%);
	--gray-200: hwb(210 93% 3%);
	--gray-300: hwb(214 89% 6%);
	--gray-400: hwb(211 80% 12%);
	--gray-500: hwb(214 63% 25%);
	--gray-600: hwb(216 44% 41%);
	--gray-700: hwb(218 29% 59%);
	--gray-800: hwb(218 18% 72%);
	--gray-900: hwb(220 10% 83%);
	--gray-1000: hwb(0 0% 100%);

	--clr-primary-hsl: 120, 100%, 78%;
	--clr-secondary: ;
	--clr-tetrary: ;
	--clr-active: hsl(330, 100%, 71%);
	--clr-accent-hsl: 330, 100%, 71%;
	--clr-error-hsl: 0, 85%, 61%;
	--clr-success-hsl: 119, 94%, 43%;

	--fs-small: 1em;
	--fs-normal: 1.1em;
	--fs-medium: 1.2em;
	--fs-large: 2em;

	--gap-small: 1rem;
	--gap-medium: 2rem;
	--gap-big: 4rem;
	--gap-large: 8rem;

	--nav-height: 4rem;

	--transition: all 0.2s ease-in-out;


	// https://web.dev/articles/
	// https://web.dev/articles/building/a-color-scheme
	--brand: #0af;
	--brand: hsl(200, 100%, 50%);
	--brand-hue: 200;
	--brand-saturation: 100%;
	--brand-lightness: 50%;

	--clr-brand: hsl(var(--brand-hue) var(--brand-saturation) var(--brand-lightness));
	--clr-brand-light: hsl(var(--brand-hue) var(--brand-saturation) calc(var(--brand-lightness) + 5%));
	--clr-brand-lighter: hsl(var(--brand-hue) var(--brand-saturation) calc(var(--brand-lightness) + 10%));
	--clr-brand-darker: hsl(var(--brand-hue) var(--brand-saturation) calc(var(--brand-lightness) - 10%));
	--clr-text: hsl(var(--brand-hue) var(--brand-saturation) 10%);
	--clr-text-light: hsl(var(--brand-hue) 30% 40%);
	--clr-bg: hsl(var(--brand-hue) 100% 96%);
	--clr-surface1: hsl(var(--brand-hue) 100% 98%);
	--clr-surface2: hsl(var(--brand-hue) 100% 90%);
	--clr-surface3: hsl(var(--brand-hue) 100% 85%);
	--clr-border: hsl(var(--brand-hue) 50% 80%);
	--border: 2px solid var(--clr-border);
}

/* GLOBAL STYLES  */
html {
	font-family: 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;

	// color-scheme: light dark;
	color-scheme: light;

	background-color: var(--clr-bg);
	color: var(--clr-text);
}

h1, h2, h3, h4, h5, h6, span, p {
	font-family: inherit;
	color: var(--clr-text);
}

.hidden {
	display: none;
}

.visually-hidden {
	clip-path: inset(50%);
	height: 1px;
	width: 1px;
	overflow: hidden;
	position: absolute;
	white-space: nowrap;
}

button {
	color: white;
	background-color: var(--clr-brand);
	font-weight: 600;
	text-decoration: none;
	letter-spacing: 0.04em;
	border: none;
	cursor: pointer;
	transition: var(--transition);

	&:hover {
		background-color: var(--clr-brand-light);
	}
	&:active {
		background-color: var(--clr-brand-lighter);
	}
	&:focus-visible {
		outline: 2px solid var(--clr-brand);
		outline-offset: -0.35em;
	}
	&:disabled {
		background-color: var(--clr-surface3);
		color: var(--clr-text-light);
	}

	&:where(:has(.icon)) {
		display: flex;
		gap: 0.5em;
		align-items: center;
	}

	&:where(:has(.visually-hidden)) {
		border-radius: 50%;
		padding: 0.5em;
	}

	&:where(:not(:has(.icon))) {
		text-align: center;
		min-inline-size: 10ch;
	}

	&:where(:not(:has(.visually-hidden))) {
		padding: var(--button-padding, 0.35em 1em);
		border-radius: 0;
	}
}

.btn {
	--offset: 5px;
	font-size: 1.2rem;
	letter-spacing: 2px;
	text-decoration: none;
	color: black;
	background-color: #69d2e7;
	cursor: pointer;
	border: 3px solid;
	padding: 0.25em 0.5em;
	box-shadow: 1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px, var(--offset) var(--offset) 0px 0px;
	position: relative;
	user-select: none;
	-webkit-user-select: none;
	touch-action: manipulation;

	top: calc(-1 * var(--offset) / 2);
	left: calc(-1 * var(--offset) / 2);
	transition: all 0.2s ease;

	&:hover, &:focus {
		background-color: rgb(0, 179, 255);
	}

	&:active,
	&:disabled {
		box-shadow: 0px 0px 0px 0px;
		top: calc(var(--offset) / 2);
		left: calc(var(--offset) / 2);
	}

	&:disabled {
		opacity: 0.5;
		cursor: not-allowed;
	}
}
@media (min-width: 768px) {
	.btn {
		padding: 0.25em 0.75em;
	}
}

/* LINKS */
/* real underline */
.link {
	text-decoration: none;
	color: var(--clr-text);
	transition: var(--transition);
	text-decoration: underline .1em;
	text-underline-offset: .2em;
	text-decoration-color: transparent;

	&:hover {
		text-underline-offset: .1em;
		text-decoration-color: var(--clr-text);
	}
}

/* https://piccalil.li/blog/styling-tables-the-modern-css-way/ */
/* https://css-irl.info/tags/css/ */

textarea,
input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="url"],
input[type="date"] {
	width: 100%;
	background-color: var(--clr-surface1);
	border: var(--border);
	border-radius: .3rem;
	padding: .6rem 1rem;
	outline: none;
	transition: var(--transition);
	transition-property: border;

	&:focus {
		border: 2px solid var(--clr-brand);
	}
}

textarea {
	height: 6rem;
	min-height: 3rem;
	resize: vertical;
}

.form-group {
	position: relative;
	margin-top: 1rem;

	input, textarea {
		// transition: color, transform, font-size 3s cubic-bezier(.25,.46,.45,.94);
	}

	textarea:focus + label,
	textarea:not(:placeholder-shown) + label,
	input:focus + label,                        // ha belekattintasz az inputba
	input:not(:placeholder-shown) + label {    // ha írtál valamit az inputba
		color: var(--clr-text);
		transform: translateY(-1.4rem);
		// left: 0;
	}

	label {
		position: absolute;
		left: 1rem;
		top: .7rem;
		padding: 0 0.3rem;
		letter-spacing: .1rem;
		color: var(--clr-text-light);
		background-color: var(--clr-surface1);
		border-radius: 1rem;
		transition: all .3s cubic-bezier(.215,.61,.355,1) .05s;
		pointer-events: none; // hogy az egér áthaladjon rajta (nem kattintható)
        user-select: none; // hogy ne lehessen kijelölni
	}
}

input[type="search"] {
	--nf-input-size: 1rem;
	background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236B7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-search'%3E%3Ccircle cx='11' cy='11' r='8'/%3E%3Cpath d='M21 21l-4.35-4.35'/%3E%3C/svg%3E");
	background-position: left calc(var(--nf-input-size)*0.75) bottom 50%;
	padding-left: calc(var(--nf-input-size)*2.25);
	background-size: var(--nf-input-size);
	background-repeat: no-repeat;
	transition: var(--transition);

	&:focus {
		padding-left: calc(var(--nf-input-size)*0.75);
		background-position: left calc(var(--nf-input-size)*-1) bottom 50%;
	}
}
// .icon-input {
// 	--_clr-icon: var(--clr-text-light);
// 	position: relative;

// 	.icon {
// 		position: absolute;
// 		padding: 0.5rem;
// 		top: 50%;
// 		left: 0.3rem;
// 		transform: translateY(-50%);
// 		border-radius: 50%;
// 		color: var(--_clr-icon);

// 		&:hover {
// 			background-color: var(--clr-surface2);
// 		}
// 	}
// 	&:focus-within {
// 		--_clr-icon: var(--clr-text);
// 	}
// 	&:not(.valid) {
//         input {
//             &:not(:placeholder-shown) {
//                 &:not(:focus) {
//                     & + i {
//                         --_clr-icon: red;
//                     }
//                 }
//             }
//         }
//     }
// 	input {
// 		padding-left: 3.2rem;
// 	}
// }
.icon-input {
	--_clr-icon: var(--clr-text-light);

	display: inline-flex;
	align-items: center;
	padding-left: .3rem;
	border-radius: .3rem;
	background-color: var(--clr-surface1);
	border: var(--border);

	&:has(input + .icon) {
		padding-right: .3rem;
		input {
			padding-left: .6rem;
		}
	}

	input {
		border: none;
		padding: .6rem;
		&:focus {
			border: none;
		}
	}
	&:has(input:focus){
		border: 2px solid var(--clr-brand);
	}

	.icon {
		padding: .3rem;
		border-radius: 50%;
		color: var(--_clr-icon);

		&:hover {
			background-color: var(--clr-surface2);
		}
	}
	// &:not(.valid) {
    //     input:not(:placeholder-shown) {
	// 		&:not(:focus) {
	// 			& + i {
	// 				--_clr-icon: red;
	// 			}
	// 		}
	// 	}
    // }
	&:not(.valid):has(input:not(:placeholder-shown):not(:focus)) {
		--_clr-icon: red;
	}

	.button {
		padding: 0;
		background-color: transparent;
		color: transparent;
		&:active {
			background-color: var(--clr-surface3);
		}
	}
	&:has(.button) {
		padding-right: .3rem;
	}
}

/* CHECKBOX */
[type=checkbox].checkbox {
	margin: 0;
	width: 0;
	height: 0;
	display: inline;
	appearance: none;

	+ label:before {
		content: "";
		display: inline-block;
		vertical-align: top;
		height: var(--fs-medium);
		width: var(--fs-medium);
		margin-right: 0.6em;
		color: rgba(0, 0, 0, 0.275);
		border: solid 0.06em;
		border-radius: 0.2em;
		box-shadow: 0 0 0.04em, 0 0.06em 0.16em -0.03em inset, 0 0 0 0.07em transparent inset;
		background: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xml:space="preserve" fill="white" viewBox="0 0 9 9"><rect x="0" y="4.3" transform="matrix(-0.707 -0.7072 0.7072 -0.707 0.5891 10.4702)" width="4.3" height="1.6" /><rect x="2.2" y="2.9" transform="matrix(-0.7071 0.7071 -0.7071 -0.7071 12.1877 2.9833)" width="6.1" height="1.7" /></svg>') no-repeat center, white;
		background-size: 0;
		will-change: color, border, background, background-size, box-shadow;
		transform: translate3d(0, 0, 0);
		transition: color 0.1s, border 0.1s, background 0.15s, box-shadow 0.1s;
	}

	/* billentyű lenyomva pipa háttér */
	&:checked:enabled:active + label:before,
	&:checked:enabled + label:active:before {
		background-color: #0a7ffb;
		color: rgba(0, 0, 0, 0.275);
	}

	/* billentyű lenyomva pipa nélküli háttér */
	&:enabled:active + label:before,
	&:enabled + label:active:before {
		box-shadow: 0 0 0.04em, 0 0.06em 0.16em -0.03em transparent inset, 0 0 0 0.07em rgba(0, 0, 0, 0.1) inset;
		background-color: #f0f0f0;
	}

	/* pipa háttér */
	&:checked + label:before {
		background-color: #3B99FC;
		background-size: 0.75em;
		color: rgba(0, 0, 0, 0.075);
	}

	/*checkbox fókuszálva, billentyű lenyomása pillanatában */
	&:focus:active+label:before,
	&:focus+label:active:before {
		box-shadow: 0 0 0.04em, 0 0.06em 0.16em -0.03em transparent inset, 0 0 0 0.07em rgba(0, 0, 0, 0.1) inset, 0 0 0 3.3px rgba(65, 159, 255, 0.55), 0 0 0 5px rgba(65, 159, 255, 0.3);
	}

	/* checkbox fókuszálva, billentyű lenyomása után */
	&:focus+label:before {
		box-shadow: 0 0 0.04em, 0 0.06em 0.16em -0.03em transparent inset, 0 0 0 0.07em rgba(0, 0, 0, 0.1) inset, 0 0 0 3.3px rgba(65, 159, 255, 0.55), 0 0 0 5px rgba(65, 159, 255, 0.3);
	}

	&:disabled+label,
	&:disabled+label:before {
		opacity: 0.5;
	}
}

/* TOGGLE SWITCH */
.switch-container {
	--_width: 3em;
	--_height: 1.5em;
	--_border-width: .1em;
	display: flex;
	gap: .6rem;

	[type=checkbox].toggle-switch {
		position: relative;
		font-size: 1rem;
		appearance: none;
		width: var(--_width);
		height: var(--_height);
		background: #ddd;
		border-radius: 3em;
		box-shadow: 0 0 0 var(--_border-width) black;
		margin-left: .1em;
		cursor: pointer;
		outline: none;
		transition: background-color .2s ease-in-out;

		&:checked {
			background-color: hotpink;
		}

		&:after {
			position: absolute;
			content: "";
			width: var(--_height);
			height: var(--_height);
			border-radius: 50%;
			background-color: #fff;
			box-shadow: 0 0 0 var(--_border-width) black;
			transform: scale(.7);
			left: 0;
			transition: left .2s ease-in-out;
		}

		&:checked:after {
			left: calc(100% - var(--_height));
		}
	}
}

.radio-group {
	--_border-radius: .5em;
	display: inline-block;
	border-radius: var(--_border-radius);
	overflow: hidden;
	background-color: var(--clr-surface2);
	padding: .3rem;

	input[type=radio] {
		position: absolute;
		visibility: hidden;
		display: none;

		&:checked+label {
			background-color: var(--clr-surface1);
		}
	}

	label {
		display: inline-block;
		padding: .3rem 1rem;
		border-radius: var(--_border-radius);
		transition: var(--transition);
		cursor: pointer;
		user-select: none;
	}
}

.radio-group2 {
	--container_width: 300px;
	position: relative;
	display: flex;
	align-items: center;
	border-radius: 10px;
	background-color: #fff;
	color: #000000;
	width: var(--container_width);
	overflow: hidden;
	border: 1px solid rgba(53, 52, 52, 0.226);
	/* From Uiverse.io by Yaya12085 */ 
	input {
		display: none;
	}
  
	label {
		width: 100%;
		padding: 10px;
		cursor: pointer;
		display: flex;
		justify-content: center;
		align-items: center;
		z-index: 1;
		font-weight: 600;
		letter-spacing: -1px;
		font-size: 14px;

		&:has(input:checked) ~ .selection {
			border-bottom: 2px solid rgb(11 117 223);
			display: inline-block;
		}
		
		&:nth-child(1):has(input:checked) ~ .selection {
			transform: translateX(calc(var(--container_width) * 0/3));
		}
		
		&:nth-child(2):has(input:checked) ~ .selection {
			transform: translateX(calc(var(--container_width) * 1/3));
		}
		
		&:nth-child(3):has(input:checked) ~ .selection {
			transform: translateX(calc(var(--container_width) * 2/3));
		}
	}
  
	.selection {
		display: none;
		position: absolute;
		height: 100%;
		width: calc(var(--container_width) / 3);
		z-index: 0;
		left: 0;
		top: 0;
		transition: .15s ease;
	}
}

.radio-test {
	--container_width: 300px;
	position: relative;
	display: flex;
	align-items: center;
	width: var(--container_width);
	overflow: hidden;
  
	li {
		width: 100%;
		padding: 10px;
		z-index: 1;

		&:has(.link.active) ~ .selection {
			border-bottom: 2px solid rgb(11 117 223);
			display: inline-block;
		}
		
		&:nth-child(1):has(.link.active) ~ .selection {
			transform: translateX(calc(var(--container_width) * 0/3));
		}
		
		&:nth-child(2):has(.link.active) ~ .selection {
			transform: translateX(calc(var(--container_width) * 1/3));
		}
		
		&:nth-child(3):has(.link.active) ~ .selection {
			transform: translateX(calc(var(--container_width) * 2/3));
		}
	}
  
	.selection {
		display: none;
		position: absolute;
		height: 100%;
		width: calc(var(--container_width) / 3);
		z-index: 0;
		left: 0;
		top: 0;
		transition: .15s ease;
	}
}

/* LINKS */
#links {

	a {
		text-decoration: none;
		color: black;
		transition: all .2s ease-in-out;
	}

	/* real underline */
	.link1 {
		text-decoration: underline .1em;
		text-underline-offset: .2em;
		text-decoration-color: transparent;
	}

	.link1:hover {
		text-underline-offset: .1em;
		text-decoration-color: hotpink;
	}

	.link2,
	.link3,
	.link4 {
		display: inline-flex;
		/* hogy ne vegyen fül több helyeet mint kell */
		position: relative;
	}

	/* underline */
	.link2::after,
	.link3::after,
	.link4::after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 0.1em;
		background-color: hotpink;
		opacity: 0;
		transition: opacity 300ms, transform 300ms;
	}

	/* slide in */
	.link2 {
		overflow: hidden;
	}

	.link2::after {
		opacity: 1;
		transform: translate3d(-100%, 0, 0);
	}

	.link2:hover::after,
	.link2:focus::after {
		transform: translate3d(0, 0, 0);
	}

	/* Scale from center */
	.link3::after {
		opacity: 1;
		transform: scale(0);
		transform-origin: center;
	}

	.link3:hover::after,
	.link3:focus::after {
		transform: scale(1);
	}

	/* Fade in */
	.link4:hover::after,
	.link4:focus::after {
		opacity: 1;
		transform: translate3d(0, 100%, 0);
		/* így a vonal mindig a link ddoboz alján lesz */
	}

	/* Underline styles - details of technique here: https://nickymeuleman.netlify.app/blog/css-animated-wrapping-underline */
	.link5 {
		padding-block: .2em;
		background:
			linear-gradient(to right, rgba(100, 200, 200, 1), rgba(100, 200, 200, 1)),
			linear-gradient(to right, rgba(255, 0, 0, 1), rgba(255, 0, 180, 1), rgba(0, 100, 200, 1));
		background-size: 100% 0.1em, 0 0.1em;
		background-position: 100% 100%, 0 100%;
		background-repeat: no-repeat;
		transition: background-size 400ms;
	}

	.link5:hover,
	.link5:focus {
		background-size: 0 0.1em, 100% 0.1em;
	}
}

/* CHIPSES */
.chips {
	display: flex;
	flex-wrap: wrap;
	padding-left: 0;
	gap: .3rem;
	
	li {
		align-self: flex-start; // magic
		list-style: none;
		display: inline-flex;
		align-items: center;
		border: var(--border);
		border-radius: 9999px;
		overflow: hidden;

		&:has(a:hover) {
			background-color: var(--clr-surface1);
		}
		&:has(a:active) {
			background-color: var(--clr-surface3);
		}
		&:has(a:focus-visible) {
			outline: 2px solid var(--clr-brand);
			outline-offset: -2px;
		}
		&:has(.icon) {
			padding-right: .2rem;

			a {
				padding: .2rem .2rem .2rem .7rem;
			}
		}
		> a {
			padding: .2rem .7rem;
			font-size: 1em;
			color: var(--clr-text);
			text-decoration: none;
		}
		
		.icon {
			font-size: inherit;
			padding: .3rem;
			border-radius: 50%;
			color: var(--_clr-icon);
			font-size: 1em;
			cursor: pointer;

			&:hover {
				color: var(--clr-bg);
				background-color: hsl(var(--clr-error-hsl));
			}
		}
	}
}

.accordion {
	--_label-height: 3rem;

	section {
		display: grid;
		grid-template-rows: var(--_label-height) 1fr;
		transition: var(--transition);

		&:has(input:checked) {
			grid-template-rows: var(--_label-height) 0fr;
		}
		&:has(input:checked) label i {
			transform: rotate(0deg);
		}

		> input {
			display: none;
		}

		label {
			display: flex;
			align-items: center;
			gap: .5rem;
			cursor: pointer;
			user-select: none;

			&:active {
				background-color: var(--clr-surface2);
			}

			i {
				transform: rotate(90deg);
				transition: var(--transition);
			}
		}

		.content {
			overflow: hidden;

			> * + * {
				margin-top: 0.5rem;
			}
		}
	}
}